const niftyAPI="https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=nifty&expiryDate=",finAPI="https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=finnifty&expiryDate=",bankAPI="https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=banknifty&expiryDate=",indexAPI="https://webapi.niftytrader.in/webapi/symbol/stock-index-data";var counterN=0,counterB=0,counterF=0,counterI=0;async function getIndexData(){var t;try{let a=await fetch("https://webapi.niftytrader.in/webapi/symbol/stock-index-data");if(!a.ok)throw Error(`Response status: ${a.status}`);return t=await a.json()}catch(e){console.error(e.message)}}async function getNiftyData(){var t;try{let a=await fetch("https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=nifty&expiryDate=");if(!a.ok)throw Error(`Response status: ${a.status}`);return t=await a.json()}catch(e){console.error(e.message)}}async function getBankData(){var t;try{let a=await fetch("https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=banknifty&expiryDate=");if(!a.ok)throw Error(`Response status: ${a.status}`);return t=await a.json()}catch(e){console.error(e.message)}}async function getFinData(){var t;try{let a=await fetch("https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=finnifty&expiryDate=");if(!a.ok)throw Error(`Response status: ${a.status}`);return t=await a.json()}catch(e){console.error(e.message)}}function download(t,a){var e=document.createElement("a");e.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(a)),e.setAttribute("download",t),e.style.display="none",document.body.appendChild(e),e.click(),document.body.removeChild(e)}function triggerDataFetchNifty(){counterN++;let t="nifty"+counterN+".txt",a=getNiftyData();a.then(a=>{console.log("setTimeout stringData => ",a.resultData.opDatas),download(t,JSON.stringify(a.resultData.opDatas))})}function triggerDataFetchBank(){counterB++;let t="bank"+counterB+".txt",a=getBankData();a.then(a=>{console.log("setTimeout stringData => ",a.resultData.opDatas),download(t,JSON.stringify(a.resultData.opDatas))})}function triggerDataFetchFin(){counterF++;let t="fin"+counterF+".txt",a=getFinData();a.then(a=>{console.log("setTimeout stringData => ",a.resultData.opDatas),download(t,JSON.stringify(a.resultData.opDatas))})}function triggerDataFetchIndex(){counterI++;let t="index"+counterI+".txt",a=getIndexData();a.then(a=>{console.log("setTimeout stringData => ",a.resultData),download(t,JSON.stringify(a.resultData))})}setInterval(triggerDataFetchNifty,15e3),setInterval(triggerDataFetchFin,15e3),setInterval(triggerDataFetchBank,15e3),setInterval(triggerDataFetchIndex,15e3);





//FINAL WORKING CODE


const niftyAPI = "https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=nifty&expiryDate=";
const finAPI = "https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=finnifty&expiryDate=";
const bankAPI = "https://webapi.niftytrader.in/webapi/option/fatch-option-chain?symbol=banknifty&expiryDate=";
const indexAPI = "https://webapi.niftytrader.in/webapi/symbol/stock-index-data";
var counterN = 0;
var counterB = 0;
var counterF = 0;
var counterI = 0;

async function getIndexData() {
  var jsonData;
    const url = indexAPI;
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`Response status: ${response.status}`);
      }
      jsonData = await response.json();
      return jsonData
    } catch (error) {
      console.error(error.message);
    }
  }

async function getNiftyData() {
  var jsonData;
    const url = niftyAPI;
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`Response status: ${response.status}`);
      }
      jsonData = await response.json();
      return jsonData
    } catch (error) {
      console.error(error.message);
    }
  }
async function getBankData() {
  var jsonData;
    const url = bankAPI;
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`Response status: ${response.status}`);
      }
      jsonData = await response.json();
      return jsonData
    } catch (error) {
      console.error(error.message);
    }
  }
  async function getFinData() {
  var jsonData;
    const url = finAPI;
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`Response status: ${response.status}`);
      }
      jsonData = await response.json();
      return jsonData
      
    } catch (error) {
      console.error(error.message);
    }
  }
function download(filename, text) {
      var element = document.createElement('a');
      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
      element.setAttribute('download', filename);
      element.style.display = 'none';
      document.body.appendChild(element);
      element.click();
      document.body.removeChild(element);
    }

function triggerDataFetchNifty() {
    counterN++;
    const fileName = 'nifty'+counterN+'.txt';
    const stringData = getNiftyData();
      stringData.then((data)=>{
        console.log('setTimeout stringData => ', data.resultData.opDatas);
        download(fileName, JSON.stringify(data.resultData.opDatas));
      })
}
function triggerDataFetchBank() {
    counterB++;
    const fileName = 'bank'+counterB+'.txt';
    const stringData = getBankData();
      stringData.then((data)=>{
        console.log('setTimeout stringData => ', data.resultData.opDatas);
        download(fileName, JSON.stringify(data.resultData.opDatas));
      })
}
function triggerDataFetchFin() {
    counterF++;
    const fileName = 'fin'+counterF+'.txt';
    const stringData = getFinData();
      stringData.then((data)=>{
        console.log('setTimeout stringData => ', data.resultData.opDatas);
        download(fileName, JSON.stringify(data.resultData.opDatas));
      })
}
function triggerDataFetchIndex() {
    counterI++;
    const fileName = 'index'+counterI+'.txt';
    const stringData = getIndexData();
      stringData.then((data)=>{
        console.log('setTimeout stringData => ', data.resultData);
        download(fileName, JSON.stringify(data.resultData));
      })
}
setInterval(triggerDataFetchNifty, 15000);
setInterval(triggerDataFetchFin, 15000);
setInterval(triggerDataFetchBank, 15000);
setInterval(triggerDataFetchIndex, 15000);









With a solid background in web development and a strong focus on creating user-centric applications using React, I am confident in my ability to contribute effectively to your team. In my previous role at [Previous Company], I successfully led multiple projects, collaborating with cross-functional teams to deliver high-quality, responsive web applications. My expertise in React, along with my proficiency in HTML, CSS, and JavaScript, enables me to build seamless and interactive user interfaces. I am also experienced in using Redux for state management and integrating RESTful APIs. I am passionate about staying current with industry trends and continuously improving my skills. 

I am eager to bring my technical knowledge, problem-solving abilities, and enthusiasm to the company and contribute to your innovative projects. 